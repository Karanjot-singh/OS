//fixed inputs
Q1

Q2	cmmand : gcc Q2.c
		
/home/karan/Desktop/Sem/OS/Quiz1/try.c:7:2: warning: return type defaults to ‘int’ [-Wimplicit-int]
    7 |  add(float a , float b) {
      |  ^~~
/home/karan/Desktop/Sem/OS/Quiz1/try.c: In function ‘add’:
/home/karan/Desktop/Sem/OS/Quiz1/try.c:8:17: warning: implicit declaration of function ‘round’ [-Wimplicit-function-declaration]
    8 |  return (float)(round(a)+round(b));
      |                 ^~~~~
/home/karan/Desktop/Sem/OS/Quiz1/try.c:8:17: warning: incompatible implicit declaration of built-in function ‘round’
/home/karan/Desktop/Sem/OS/Quiz1/try.c:1:1: note: include ‘<math.h>’ or provide a declaration of ‘round’
  +++ |+#include <math.h>
    1 | 
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
/usr/bin/ld: /tmp/cc0vxpEi.o: in function `add':
try.c:(.text+0x1c): undefined reference to `round'
/usr/bin/ld: try.c:(.text+0x2b): undefined reference to `round'
collect2: error: ld returned 1 exit status

Noncompliant Code Example (Implicit Return Type)
Do not declare a function with an implicit return type. For example, if a function returns a meaningful integer value, declare it as returning int. If it returns no meaningful value, declare it as returning void.

Q3

1.If you want to store a random integer in this char array, then you should get the pointer to the index that you want to store the integer and cast it to an integer pointer and use it like that.

char mychars[10];
int * intlocation = (int*)(&mychar[5]);
*intlocation = 3632; // stores 3632
Beware that this will write to 4 bytes(4 char locations in your array) starting from the index you have specified. You should always check you are not going out of array.Also you should do the same casting for retrieving the value when needed.

Q4

Q5
16 bit
https://wiki.osdev.org/Memory_Map_(x86)	

Q6
